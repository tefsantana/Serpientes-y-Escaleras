import random

DICCIONARIO: dict = {3: 18, 6: 67, 57: 83, 72: 89, 85: 96, 86: 45, 88: 31, 98: 79, 63: 22, 58: 37, 48: 12, 36: 17}

def mostrar_menu() -> None:
    """POST-CONDICI√ìN: imprime el men√∫ para que el usuario pueda tener una visualizaci√≥n amplia y elegir una opci√≥n en base a √©l."""
    print(chr(27)+ "[0;37m" + """                                                          
                                                 ‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó
                                                 ‚ïë Ôº≥Ôº•Ôº≤Ôº∞Ôº©Ôº•ÔºÆÔº¥Ôº•Ôº≥ Ôºπ Ôº•Ôº≥Ôº£Ôº°Ôº¨Ôº•Ôº≤Ôº°Ôº≥ ‚ïë
                                                 ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù
‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó
‚ïë MEN√ö ‚ïë
‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù

( 1 ) Iniciar partida

( 2 ) Mostrar estad√≠sticas de casilleros

( 3 ) Resetear estad√≠sticas de casilleros

( 4 ) Salir
""")

def generar_casillero_de_cascara_de_banana(casilleros_especiales: list) -> None:
    """POST-CONDICI√ìN: genera los casilleros 'c√°scara de banana' de manera aleatoria y los ubica en el tablero."""
    cantidad_de_casilleros_banana: int = 5
    for casillero_banana in range(cantidad_de_casilleros_banana):
        ubicacion: int = random.randint(21, 99)
        while ubicacion in casilleros_especiales[0]["ubicaciones"] or ubicacion in DICCIONARIO.keys() or ubicacion in DICCIONARIO.values():
            ubicacion = random.randint(21, 99)
        casilleros_especiales[0]["ubicaciones"].append(ubicacion)

def generar_casillero_magico(casilleros_especiales: list) -> None:
    """POST-CONDICI√ìN: genera los casilleros 'm√°gicos' de manera aleatoria y los ubica en el tablero."""
    cantidad_de_casilleros_magico: int = 3
    casilleros_posicionados: list = []
    casilleros_posicionados = [ubicacion for casillero_especial in casilleros_especiales for ubicacion in casillero_especial["ubicaciones"]]
    for casillero_magico in range(cantidad_de_casilleros_magico):
        ubicacion: int = random.randint(2, 99)
        while ubicacion in casilleros_especiales[1]["ubicaciones"] or ubicacion in DICCIONARIO.keys() or ubicacion in DICCIONARIO.values() or ubicacion in casilleros_posicionados:
            ubicacion = random.randint(2, 99)
        casilleros_especiales[1]["ubicaciones"].append(ubicacion)

def generar_casillero_rushero(casilleros_especiales: list) -> None:
    """POST-CONDICI√ìN: genera el casillero 'rushero' de manera aleatoria y los ubica en el tablero."""
    cantidad_de_casilleros_rushero: int = 1
    casilleros_posicionados: list = []
    casilleros_posicionados = [ubicacion for casillero_especial in casilleros_especiales for ubicacion in casillero_especial["ubicaciones"]]
    maximo_numero_cada_piso: list = [10, 20, 30, 40, 50, 60, 70, 80, 90, 100]
    for casillero_rushero in range(cantidad_de_casilleros_rushero):
        ubicacion: int = random.randint(2, 100)
        while ubicacion in maximo_numero_cada_piso or ubicacion in casilleros_especiales[2]["ubicaciones"] or ubicacion in DICCIONARIO.keys() or ubicacion in DICCIONARIO.values() or ubicacion in casilleros_posicionados:
            ubicacion = random.randint(2, 100)
        casilleros_especiales[2]["ubicaciones"].append(ubicacion)

def generar_casillero_hongos_locos(casilleros_especiales: list) -> None:
    """POST-CONDICI√ìN: genera el casillero 'hongos locos' de manera aleatoria y los ubica en el tablero."""
    cantidad_de_casilleros_hongos_locos: int = 1
    casilleros_posicionados: list = []
    casilleros_posicionados = [ubicacion for casillero_especial in casilleros_especiales for ubicacion in casillero_especial["ubicaciones"]]
    minimo_numero_cada_piso: list = [1, 11, 21, 31, 41, 51, 61, 71, 81, 91]
    for casillero_hongos_locos in range(cantidad_de_casilleros_hongos_locos):
        ubicacion: int = random.randint(1, 99)
        while ubicacion in minimo_numero_cada_piso or ubicacion in casilleros_especiales[3]["ubicaciones"] or ubicacion in DICCIONARIO.keys() or ubicacion in DICCIONARIO.values() or ubicacion in casilleros_posicionados:
            ubicacion = random.randint(1, 99)
        casilleros_especiales[3]["ubicaciones"].append(ubicacion)

def ubicar_casilleros_especiales(casilleros_especiales: list) -> None:
    """POST-CONDICI√ìN: re√∫ne todas las funciones que generan casilleros para poder utilizarlas al iniciar una partida."""
    generar_casillero_de_cascara_de_banana(casilleros_especiales)
    generar_casillero_magico(casilleros_especiales)
    generar_casillero_rushero(casilleros_especiales)
    generar_casillero_hongos_locos(casilleros_especiales)

def mostrar_tablero() -> None:
    """POST-CONDICI√ìN: muestra el tablero."""
    print(chr(27) + "[2;31m" + """
    ‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ï¶‚ïê‚ïê‚ïê‚ïê‚ï¶‚ïê‚ïê‚ïê‚ïê‚ï¶‚ïê‚ïê‚ïê‚ïê‚ï¶‚ïê‚ïê‚ïê‚ïê‚ï¶‚ïê‚ïê‚ïê‚ïê‚ï¶‚ïê‚ïê‚ïê‚ïê‚ï¶‚ïê‚ïê‚ïê‚ïê‚ï¶‚ïê‚ïê‚ïê‚ïê‚ï¶‚ïê‚ïê‚ïê‚ïê‚ïó
    ‚ïë 100 ‚ïë 99 ‚ïë 98 ‚ïë 97 ‚ïë 96 ‚ïë 95 ‚ïë 94 ‚ïë 93 ‚ïë 92 ‚ïë 91 ‚ïë
    ‚ï†‚ïê‚ïê‚ïê‚ïê‚ïê‚ï¨‚ïê‚ïê‚ïê‚ïê‚ï¨‚ïê‚ïê‚ïê‚ïê‚ï¨‚ïê‚ïê‚ïê‚ïê‚ï¨‚ïê‚ïê‚ïê‚ïê‚ï¨‚ïê‚ïê‚ïê‚ïê‚ï¨‚ïê‚ïê‚ïê‚ïê‚ï¨‚ïê‚ïê‚ïê‚ïê‚ï¨‚ïê‚ïê‚ïê‚ïê‚ï¨‚ïê‚ïê‚ïê‚ïê‚ï£        ESCALERAS:                                                  
    ‚ïë 81  ‚ïë 82 ‚ïë 83 ‚ïë 84 ‚ïë 85 ‚ïë 86 ‚ïë 87 ‚ïë 88 ‚ïë 89 ‚ïë 90 ‚ïë            Casillero 3 ‚ûî  Avanza hasta Casillero 18                 
    ‚ï†‚ïê‚ïê‚ïê‚ïê‚ïê‚ï¨‚ïê‚ïê‚ïê‚ïê‚ï¨‚ïê‚ïê‚ïê‚ïê‚ï¨‚ïê‚ïê‚ïê‚ïê‚ï¨‚ïê‚ïê‚ïê‚ïê‚ï¨‚ïê‚ïê‚ïê‚ïê‚ï¨‚ïê‚ïê‚ïê‚ïê‚ï¨‚ïê‚ïê‚ïê‚ïê‚ï¨‚ïê‚ïê‚ïê‚ïê‚ï¨‚ïê‚ïê‚ïê‚ïê‚ï£            Casillero 6 ‚ûî  Avanza hasta Casillero 67                  
    ‚ïë 80  ‚ïë 79 ‚ïë 78 ‚ïë 77 ‚ïë 76 ‚ïë 75 ‚ïë 74 ‚ïë 73 ‚ïë 72 ‚ïë 71 ‚ïë            Casillero 57 ‚ûî  Avanza hasta Casillero 83                  
    ‚ï†‚ïê‚ïê‚ïê‚ïê‚ïê‚ï¨‚ïê‚ïê‚ïê‚ïê‚ï¨‚ïê‚ïê‚ïê‚ïê‚ï¨‚ïê‚ïê‚ïê‚ïê‚ï¨‚ïê‚ïê‚ïê‚ïê‚ï¨‚ïê‚ïê‚ïê‚ïê‚ï¨‚ïê‚ïê‚ïê‚ïê‚ï¨‚ïê‚ïê‚ïê‚ïê‚ï¨‚ïê‚ïê‚ïê‚ïê‚ï¨‚ïê‚ïê‚ïê‚ïê‚ï£            Casillero 72 ‚ûî  Avanza hasta Casillero 89                  
    ‚ïë 61  ‚ïë 62 ‚ïë 63 ‚ïë 64 ‚ïë 65 ‚ïë 66 ‚ïë 67 ‚ïë 68 ‚ïë 69 ‚ïë 70 ‚ïë            Casillero 85 ‚ûî  Avanza hasta Casillero 96                 
    ‚ï†‚ïê‚ïê‚ïê‚ïê‚ïê‚ï¨‚ïê‚ïê‚ïê‚ïê‚ï¨‚ïê‚ïê‚ïê‚ïê‚ï¨‚ïê‚ïê‚ïê‚ïê‚ï¨‚ïê‚ïê‚ïê‚ïê‚ï¨‚ïê‚ïê‚ïê‚ïê‚ï¨‚ïê‚ïê‚ïê‚ïê‚ï¨‚ïê‚ïê‚ïê‚ïê‚ï¨‚ïê‚ïê‚ïê‚ïê‚ï¨‚ïê‚ïê‚ïê‚ïê‚ï£                        
    ‚ïë 60  ‚ïë 59 ‚ïë 58 ‚ïë 57 ‚ïë 56 ‚ïë 55 ‚ïë 54 ‚ïë 53 ‚ïë 52 ‚ïë 51 ‚ïë        SERPIENTES üêç:                                              
    ‚ï†‚ïê‚ïê‚ïê‚ïê‚ïê‚ï¨‚ïê‚ïê‚ïê‚ïê‚ï¨‚ïê‚ïê‚ïê‚ïê‚ï¨‚ïê‚ïê‚ïê‚ïê‚ï¨‚ïê‚ïê‚ïê‚ïê‚ï¨‚ïê‚ïê‚ïê‚ïê‚ï¨‚ïê‚ïê‚ïê‚ïê‚ï¨‚ïê‚ïê‚ïê‚ïê‚ï¨‚ïê‚ïê‚ïê‚ïê‚ï¨‚ïê‚ïê‚ïê‚ïê‚ï£            Casillero 86 ‚ûî  Retrocede hasta Casillero 45              
    ‚ïë 41  ‚ïë 42 ‚ïë 43 ‚ïë 44 ‚ïë 45 ‚ïë 46 ‚ïë 47 ‚ïë 48 ‚ïë 49 ‚ïë 50 ‚ïë            Casillero 88 ‚ûî  Retrocede hasta Casillero 31               
    ‚ï†‚ïê‚ïê‚ïê‚ïê‚ïê‚ï¨‚ïê‚ïê‚ïê‚ïê‚ï¨‚ïê‚ïê‚ïê‚ïê‚ï¨‚ïê‚ïê‚ïê‚ïê‚ï¨‚ïê‚ïê‚ïê‚ïê‚ï¨‚ïê‚ïê‚ïê‚ïê‚ï¨‚ïê‚ïê‚ïê‚ïê‚ï¨‚ïê‚ïê‚ïê‚ïê‚ï¨‚ïê‚ïê‚ïê‚ïê‚ï¨‚ïê‚ïê‚ïê‚ïê‚ï£            Casillero 98 ‚ûî  Retrocede hasta Casillero 79               
    ‚ïë 40  ‚ïë 39 ‚ïë 38 ‚ïë 37 ‚ïë 36 ‚ïë 35 ‚ïë 34 ‚ïë 33 ‚ïë 32 ‚ïë 31 ‚ïë            Casillero 63 ‚ûî  Retrocede hasta Casillero 22
    ‚ï†‚ïê‚ïê‚ïê‚ïê‚ïê‚ï¨‚ïê‚ïê‚ïê‚ïê‚ï¨‚ïê‚ïê‚ïê‚ïê‚ï¨‚ïê‚ïê‚ïê‚ïê‚ï¨‚ïê‚ïê‚ïê‚ïê‚ï¨‚ïê‚ïê‚ïê‚ïê‚ï¨‚ïê‚ïê‚ïê‚ïê‚ï¨‚ïê‚ïê‚ïê‚ïê‚ï¨‚ïê‚ïê‚ïê‚ïê‚ï¨‚ïê‚ïê‚ïê‚ïê‚ï£            Casillero 58 ‚ûî  Retrocede hasta Casillero 37            
    ‚ïë 21  ‚ïë 22 ‚ïë 23 ‚ïë 24 ‚ïë 25 ‚ïë 26 ‚ïë 27 ‚ïë 28 ‚ïë 29 ‚ïë 30 ‚ïë            Casillero 48 ‚ûî  Retrocede hasta Casillero 12               
    ‚ï†‚ïê‚ïê‚ïê‚ïê‚ïê‚ï¨‚ïê‚ïê‚ïê‚ïê‚ï¨‚ïê‚ïê‚ïê‚ïê‚ï¨‚ïê‚ïê‚ïê‚ïê‚ï¨‚ïê‚ïê‚ïê‚ïê‚ï¨‚ïê‚ïê‚ïê‚ïê‚ï¨‚ïê‚ïê‚ïê‚ïê‚ï¨‚ïê‚ïê‚ïê‚ïê‚ï¨‚ïê‚ïê‚ïê‚ïê‚ï¨‚ïê‚ïê‚ïê‚ïê‚ï£            Casillero 36 ‚ûî  Retrocede hasta Casillero 17
    ‚ïë 20  ‚ïë 19 ‚ïë 18 ‚ïë 17 ‚ïë 16 ‚ïë 15 ‚ïë 14 ‚ïë 13 ‚ïë 12 ‚ïë 11 ‚ïë                                                                     
    ‚ï†‚ïê‚ïê‚ïê‚ïê‚ïê‚ï¨‚ïê‚ïê‚ïê‚ïê‚ï¨‚ïê‚ïê‚ïê‚ïê‚ï¨‚ïê‚ïê‚ïê‚ïê‚ï¨‚ïê‚ïê‚ïê‚ïê‚ï¨‚ïê‚ïê‚ïê‚ïê‚ï¨‚ïê‚ïê‚ïê‚ïê‚ï¨‚ïê‚ïê‚ïê‚ïê‚ï¨‚ïê‚ïê‚ïê‚ïê‚ï¨‚ïê‚ïê‚ïê‚ïê‚ï£                                                                        
    ‚ïë  1  ‚ïë  2 ‚ïë  3 ‚ïë  4 ‚ïë  5 ‚ïë  6 ‚ïë  7 ‚ïë  8 ‚ïë  9 ‚ïë 10 ‚ïë                                                                        
    ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ï©‚ïê‚ïê‚ïê‚ïê‚ï©‚ïê‚ïê‚ïê‚ïê‚ï©‚ïê‚ïê‚ïê‚ïê‚ï©‚ïê‚ïê‚ïê‚ïê‚ï©‚ïê‚ïê‚ïê‚ïê‚ï©‚ïê‚ïê‚ïê‚ïê‚ï©‚ïê‚ïê‚ïê‚ïê‚ï©‚ïê‚ïê‚ïê‚ïê‚ï©‚ïê‚ïê‚ïê‚ïê‚ïù""")

def caer_en_casillero_cascara_de_banana(casilleros_especiales: list, datos_jugador: dict, jugador: str) -> None:
    """POST-CONDICI√ìN: chequea si el jugador cae en un casillero "c√°scara de banana" y, en caso afirmativo, lo lleva al casillero que corresponda."""
    if datos_jugador["casillero"] in casilleros_especiales[0]["ubicaciones"]:
        datos_jugador["casillero"] -= 20
        casilleros_especiales[0]["contador"] += 1
        print(f"\nEL JUGADOR {jugador} HA CA√çDO EN EL CASILLERO 'C√ÅSCARA DE BANANA', CAE DOS PISOS Y AHORA EST√Å EN EL CASILLERO {datos_jugador['casillero']}")
        
def caer_en_casillero_magico(casilleros_especiales: list, datos_jugador: dict, jugador: str) -> None:
    """POST-CONDICI√ìN: chequea si el jugador cae en un casillero "m√°gico" y, en caso afirmativo, lo lleva al casillero que corresponda."""
    if datos_jugador["casillero"] in casilleros_especiales[1]["ubicaciones"]:
        datos_jugador["casillero"] = random.randint(2, 99)
        casilleros_especiales[1]["contador"] += 1
        print(f"\nEL JUGADOR {jugador} HA CA√çDO EN EL CASILLERO 'M√ÅGICO', SE TELETRANSPORTA AL CASILLERO {datos_jugador['casillero']}")

def caer_en_casillero_rushero(casilleros_especiales: list, datos_jugador: dict, jugador: str) -> None:
    """POST-CONDICI√ìN: chequea si el jugador cae en un casillero "rushero" y, en caso afirmativo, lo lleva al casillero que corresponda."""
    if datos_jugador["casillero"] in casilleros_especiales[2]["ubicaciones"]:
        datos_jugador["casillero"] += (10 - (datos_jugador["casillero"] % 10))
        casilleros_especiales[2]["contador"] += 1
        print(f"\nEL JUGADOR {jugador} HA CA√çDO EN EL CASILLERO 'RUSHERO', AVANZA HASTA EL CASILLERO {datos_jugador['casillero']}")

def caer_en_casillero_hongos_locos(casilleros_especiales: list, datos_jugador: dict, jugador: str) -> None:
    """POST-CONDICI√ìN: chequea si el jugador cae en un casillero "hongos locos" y, en caso afirmativo, lo lleva al casillero que corresponda."""
    if datos_jugador["casillero"] in casilleros_especiales[3]["ubicaciones"]:
        datos_jugador["casillero"] -= ((datos_jugador["casillero"] % 10) - 1)
        casilleros_especiales[3]["contador"] += 1
        print(f"\nEL JUGADOR {jugador} HA CA√çDO EN EL CASILLERO 'HONGOS LOCOS', RETROCEDE HASTA EL CASILLERO {datos_jugador['casillero']}")

def serpientes_y_escaleras(datos_jugador: dict, escaleras: dict, serpientes: dict, jugador: str) -> None:
    """POST-CONDICI√ìN: chequea si el jugador cae en un casillero de escalera o serpiente y, en caso afirmativo, lo lleva al casillero que corresponda."""
    for key in DICCIONARIO:
        if datos_jugador['casillero'] == key:
            llave_casillero_jugador: int = key
            datos_jugador['casillero'] = DICCIONARIO.get(key)

            if datos_jugador['casillero'] > llave_casillero_jugador:
                escaleras["contador"] += 1
                print(f"\nEl jugador {jugador} se ha topado con una ESCALERA! Asciende hasta el casillero {datos_jugador['casillero']}")

            elif datos_jugador['casillero'] < llave_casillero_jugador:
                serpientes["contador"] += 1
                print(f"\nEl jugador {jugador} se ha topado con una SERPIENTE! Desciende hasta el casillero {datos_jugador['casillero']}")

def chequear_caida_en_casillero_especial(casilleros_especiales: list, datos_jugador: dict, escaleras: dict, serpientes: dict, jugador: str) -> None:
    """POST-CONDICI√ìN: re√∫ne todas las funciones de casilleros especiales para verificar si el jugador cae en alguno de √©stos."""
    serpientes_y_escaleras(datos_jugador, escaleras, serpientes, jugador)
    caer_en_casillero_cascara_de_banana(casilleros_especiales, datos_jugador, jugador)
    caer_en_casillero_hongos_locos(casilleros_especiales, datos_jugador, jugador)
    caer_en_casillero_magico(casilleros_especiales, datos_jugador, jugador)
    caer_en_casillero_rushero(casilleros_especiales, datos_jugador, jugador)

def mostrar_estadisticas(casilleros_especiales: list, se_jugo_partida: bool, escaleras: dict, serpientes: dict) -> None:
    """POST-CONDICI√ìN: muestra el contador de cada diccionario incluido en la lista de casilleros especiales y escaleras y serpientes."""
    if se_jugo_partida == False:
        print("\nNo se pueden mostrar las estad√≠sticas porque todav√≠a no se ha jugado una partida. \n")
    else:
        print("\nESTAD√çSTICAS:\n")
        for diccionario_casillero in casilleros_especiales:
            print(f"{diccionario_casillero['tipo']}: Se ha ca√≠do {diccionario_casillero['contador']} veces en el casillero.\n")
        print(f"{escaleras['tipo']}: Se ha ca√≠do {escaleras['contador']} veces en el casillero.\n")
        print(f"{serpientes['tipo']}: Se ha ca√≠do {serpientes['contador']} veces en el casillero.")
        
def resetear_estadisticas(casilleros_especiales: list, se_jugo_partida: bool, escaleras: dict, serpientes: dict) -> None:
    """POST-CONDICI√ìN: resetea el contador de cada diccionario incluido en la lista de casilleros especiales y escaleras y serpientes."""
    if se_jugo_partida == False:
        print("\nNo se pueden resetear las estad√≠sticas porque todav√≠a no se ha jugado una partida. \n")
    else:
        for diccionario_casillero in casilleros_especiales:
            diccionario_casillero["contador"] = 0
        escaleras["contador"] = 0
        serpientes["contador"] = 0
        print("\nSe han reseteado las estad√≠sticas.\n")

def ronda_jugador(jugador: str, datos_jugador: dict) -> None:
    """POST-CONDICI√ìN: tira los dados de forma aleatoria y asigna la nueva posici√≥n del jugador."""
    print(chr(27) + "[6;37m" + f"""
EL JUGADOR {jugador} TIRAR√Å LOS DADOS 
""")
    texto_tirar_dados: str = input("Inserte cualquier tecla para tirar los dados.\n")
    turno: int = random.randrange(1,7)
    datos_jugador["casillero"] += turno
    print(chr(27) + "[6;37m" + f"El jugador {jugador} tir√≥ los dados. Sac√≥ {turno}, avanza hasta el casillero {datos_jugador['casillero']}")

def partida(casilleros_especiales: list, jugador: str, datos_jugador: dict, escaleras: dict, serpientes: dict, estar_en_partida: bool) -> bool:
    ronda_jugador(jugador, datos_jugador)
    chequear_caida_en_casillero_especial(casilleros_especiales, datos_jugador, escaleras, serpientes, jugador)
    if datos_jugador['casillero'] >= 100:
        datos_jugador['casillero'] = 100
        print(f"""
JUEGO FINALIZADO: Gana el Jugador {jugador} por llegar primero al casillero 100!
        """)
        estar_en_partida = False
    return estar_en_partida
    
def iniciar_partida(casilleros_especiales: list, jugador_1: str, jugador_2: str, primero_en_jugar: int, datos_jugador_1: dict, datos_jugador_2: dict, escaleras: dict, serpientes: dict) -> None:
    """POST-CONDICI√ìN: inicia toda la l√≥gica para iniciar una partida dependiendo a qu√© jugador le toque primero hasta que finalice la misma."""
    estar_en_partida: bool = True

    if 1 == primero_en_jugar:
        mostrar_tablero()
        while (datos_jugador_1['casillero'] < 100 or datos_jugador_2['casillero'] < 100) and estar_en_partida:
            estar_en_partida = partida(casilleros_especiales, jugador_1, datos_jugador_1, escaleras, serpientes, estar_en_partida)
            if estar_en_partida:
                estar_en_partida = partida(casilleros_especiales, jugador_2, datos_jugador_2, escaleras, serpientes, estar_en_partida)
            mostrar_tablero()

    else:
        mostrar_tablero()
        while (datos_jugador_1['casillero'] < 100 or datos_jugador_2['casillero'] < 100) and estar_en_partida:
            estar_en_partida = partida(casilleros_especiales, jugador_2, datos_jugador_2, escaleras, serpientes, estar_en_partida)
            if estar_en_partida:
                estar_en_partida = partida(casilleros_especiales, jugador_1, datos_jugador_1, escaleras, serpientes, estar_en_partida)
            mostrar_tablero()

def main() -> None:
    """POST-CONDICI√ìN: principal funci√≥n en la cual se ejecuta todo el programa."""
    iniciar: bool = True
    se_jugo_partida: bool = False
    casilleros_especiales: list = []
    casilleros_especiales = [
        {"tipo": "C√°scara de banana", "ubicaciones": [], "contador": 0},
        {"tipo": "M√°gico", "ubicaciones": [], "contador": 0},
        {"tipo": "Rushero", "ubicaciones": [], "contador": 0},
        {"tipo": "Hongos locos", "ubicaciones": [], "contador": 0},
    ]
    escaleras: dict = {"tipo": "Escalera", "contador": 0}
    serpientes: dict = {"tipo": "Serpiente", "contador": 0}

    while iniciar:
        mostrar_menu()
        seleccionar = input("Ingrese una opci√≥n: ")

        while not seleccionar.isnumeric() or not (0 < int(seleccionar) < 5):
            seleccionar = input("\nIngrese una opci√≥n v√°lida: \n")

        if seleccionar == "1":
            print("\nJUGADORES: \n")
            jugador_1: str = input("Nombre del jugador 1: \n")
            jugador_2: str = input("\nNombre del jugador 2: \n")
            datos_jugador_2: dict = {'casillero': 1}
            datos_jugador_1: dict = {'casillero': 1}
            primero_en_jugar: int = random.randint(1,2)
            ubicar_casilleros_especiales(casilleros_especiales)

            print(f"""1 PARA EL JUGADOR {jugador_1} Y 2 PARA EL JUGADOR {jugador_2}...\n
                     TOC√ì EL N√öMERO ' {primero_en_jugar} ' """)

            iniciar_partida(casilleros_especiales, jugador_1, jugador_2, primero_en_jugar, datos_jugador_1, datos_jugador_2, escaleras, serpientes)
            for casillero_especial in casilleros_especiales:
                casillero_especial["ubicaciones"] = []
            se_jugo_partida = True

        elif seleccionar == "2":
            mostrar_estadisticas(casilleros_especiales, se_jugo_partida, escaleras, serpientes)
    
        elif seleccionar == "3":
            resetear_estadisticas(casilleros_especiales, se_jugo_partida, escaleras, serpientes)
    
        elif seleccionar == "4":
            print("""
            
            ¬°Nos vemos! Gracias por jugar Serpientes y Escaleras.
            
            ... SALIENDO DEL PROGRAMA ...
            
            """)
            iniciar = False

main()




